language: rust

rust:
- stable
- beta

os:
- linux
- osx
- windows

stages:
- check
- test
- benchmark

env:
  global:
    secure: dvX7aIxAs3YeKwzvtGiWs8dtTvsFGjxkNglAy289x0mM0XCMK6VzjxpL7fHAcrMPlbSFGfe2TXCTcM5sNDROJz0OSamax6SN68VmbjLZxhVXQGfMVZy9Xgx7EWYcE+z0HzXe2mzFknhn+j0Y9WJznWnNoSFe2cr2SwuwBxjyPVIfrDxI13Z50wiSE4TkqhdvMzwZvh785V9odnjbr3EpSHz/m3jSjqQIkj57C+gRfA39hdMJ9yRCNBgXl2/CJs5Hl1Acb19o+sAZuf2UF9ui/rmsvE5vcV3UKJC7EfaNdhpZGv1EdOraqhOoKNDbJD+vFtix8UCOAofWxPFRqcmI0TMeGBMcLzwplKYWmhrwDu4M6SiTLnbpcE8DI7yrZqsHmSwc69SVhzj4fAT3lmeMRSgEQnfIjJDlJ83Fr0OiT1DIuDpBJ4NfhCICJE3ElNv0n8uc2VQ0BLC3/SXEDc7z6WahyFq8esFrYPbeglHSOG+YGUR6xi31EeU53K/+/kaOAe09Rmrb+wnZfFjzAtjnXPpFYJzfpZvgfAmKz9Yk5Tjut+0dTFXRJ+9vpv89TM9jp6BDiRQDgfD7NBDnAfpfl+9thZG+CqxlqEKqt7h8QtvJzOZC/yhVotY0OdQuN3h+nxsWuqhRibtlIh+NNx/IGGmvamYdGepB5jglgJZWoDQ=

addons:
  apt:
    packages:
      - libgtk-3-dev
      - libssl-dev

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      brew update && brew install gtk+3
    elif [[ "$TRAVIS_OS_NAME" == "windows" ]]
    then
      travis_wait choco install msys2 && pacman -S --noconfirm --quiet mingw-w64-x86_64-gtk3
    fi

jobs:
  allow_failures:
  - name: coverage # FIXME

  include:
  - name: fmt
    stage: check
    rust: stable
    os: linux
    install:
    - rustup component add rustfmt
    script:
    - cargo fmt --all -- --check

  - name: clippy
    stage: check
    rust: stable
    os: linux
    install:
    - rustup component add clippy
    script:
    - cargo clippy --all-targets -- -D warnings

  - name: coverage
    stage: check
    rust: nightly
    os: linux
    install:
    - RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo +nightly install cargo-tarpaulin
    script:
    - cargo +nightly tarpaulin -v --all-features --out Xml
    after_success:
    - bash <(curl -s https://codecov.io/bash)

  - name: doc
    stage: check
    rust: nightly
    os: linux
    script:
    - cargo +nightly doc --all-features

  - stage: test
    rust: nightly
    os: linux
    script:
    - cargo +nightly test -v --all-features

  - stage: test
    rust: nightly
    os: osx
    script:
    - cargo +nightly test -v --all-features

  - stage: test
    rust: nightly
    os: windows
    script:
    - cargo +nightly test -v --all-features

  - stage: benchmark
    if: type = pull_request
    rust: nightly
    os: linux
    script:
    - cargo bench --all-features
